<?php

/**
 * Table_Base_User
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $firstname
 * @property string $midname
 * @property string $lastname
 * @property string $login
 * @property string $password
 * @property string $salt
 * @property string $email
 * @property string $avatar
 * @property string $summary
 * @property string $homephone
 * @property string $cellphone
 * @property string $addressreg
 * @property string $addressfact
 * @property date $birthdate
 * @property date $hiredate
 * @property date $retiredate
 * @property string $marital
 * @property string $children
 * @property integer $role
 * @property Table_Role $Role
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Table_Base_User extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('sys_users');
        $this->hasColumn('firstname', 'string', 25, array(
             'type' => 'string',
             'length' => '25',
             ));
        $this->hasColumn('midname', 'string', 25, array(
             'type' => 'string',
             'length' => '25',
             ));
        $this->hasColumn('lastname', 'string', 25, array(
             'type' => 'string',
             'length' => '25',
             ));
        $this->hasColumn('login', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             ));
        $this->hasColumn('password', 'string', 60, array(
             'type' => 'string',
             'length' => '60',
             ));
        $this->hasColumn('salt', 'string', 12, array(
             'type' => 'string',
             'length' => '12',
             ));
        $this->hasColumn('email', 'string', 30, array(
             'type' => 'string',
             'length' => '30',
             ));
        $this->hasColumn('avatar', 'string', 250, array(
             'type' => 'string',
             'length' => '250',
             ));
        $this->hasColumn('summary', 'string', 150, array(
             'type' => 'string',
             'length' => '150',
             ));
        $this->hasColumn('homephone', 'string', 15, array(
             'type' => 'string',
             'length' => '15',
             ));
        $this->hasColumn('cellphone', 'string', 15, array(
             'type' => 'string',
             'length' => '15',
             ));
        $this->hasColumn('addressreg', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('addressfact', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('birthdate', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('hiredate', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('retiredate', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('marital', 'string', 30, array(
             'type' => 'string',
             'length' => '30',
             ));
        $this->hasColumn('children', 'string', 500, array(
             'type' => 'string',
             'length' => '500',
             ));
        $this->hasColumn('role', 'integer', null, array(
             'type' => 'integer',
             'default' => 1,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Table_Role as Role', array(
             'local' => 'role',
             'foreign' => 'id'));
    }
}